from django.contrib.auth.models import User
from .models import Employee,JobTitle,Department,Leave
from rest_framework import serializers




class UserSerializer(serializers.ModelSerializer):
    class Meta:
        model=User
        fileds=['username','email','first_name','last_name']


class EmployeeSerializer(serializers.ModelSerializer):
    department=serializers.SlugRelatedField(slug_field='name',queryset=Department.objects.all())
    job_title=serializers.SlugRelatedField(slug_field='name',queryset=JobTitle.objects.all())

    class Meta:
        user=UserSerializer
        model=Employee
        fields=['id','user','first_name','last_name','gender', 'department','job_title','date_of_birth','contact','nin','address','emergency_contact','employee_id','employee_type']

    def create(self, validated_data):
        user_data=validated_data.pop('user')
        username=validated_data['username']
        first_name=validated_data.get('first_name')
        last_name=validated_data.get('last_name')
        email=validated_data.get('email')
        user=User.objects.create_user(user_data,username=username,first_name=first_name,last_name=last_name,email=email,**validated_data)
        emplyee=Employee.objects.create(**user,password='1234')
        return emplyee
    
class LeaveSerializer(serializers.ModelSerializer):
    class Meta:
        model=Leave
        fields='__all__'



from django.db import models
from django.contrib.auth.models import User
import uuid
def generate_employee_id():
    return f'EMP-{uuid.uuid4().hex[:8].upper()}'


class Department(models.Model):
    name=models.CharField(max_length=20,blank=False,unique=True)
    description=models.TextField()
    slug=models.SlugField(unique=True,blank=False)

    def __str__(self):
        return self.name
    

class JobTitle(models.Model):
    title=models.CharField(max_length=20)
    description=models.TextField()
    slug=models.SlugField(unique=True)

    def __str__(self):
        return self.title
    



class Employee(models.Model):
    GENDER_CHOICES=(
        ('F','Female'),
        ('M','Male'),

    )
    EMPLOYEE_TYPE_CHOICES=(
        ('parmenet','Permanent'),
        ('contract','Contract'),
        ('part time','Part Time'),

    )
    user=models.OneToOneField(User,on_delete=models.CASCADE)
    # first_name=models.CharField(max_length=40,blank=False,null=False)
    # last_name=models.CharField(max_length=40,blank=True,null=False)
    gender=models.CharField(max_length=10,choices=GENDER_CHOICES)
    date_of_birth=models.DateField()
    contact=models.CharField(max_length=10)
    nin=models.CharField(max_length=16,blank=True)
    address=models.CharField(max_length=20)
    emergency_contact=models.CharField(max_length=10,blank=True)
    department=models.ForeignKey(Department,on_delete=models.CASCADE)
    job_title=models.ForeignKey(JobTitle,on_delete=models.CASCADE)
    employee_id=models.CharField(default=generate_employee_id())
    employee_type=models.CharField(max_length=10,choices=EMPLOYEE_TYPE_CHOICES)

class Leave(models.Model):
    STATUS_CHOICES=(
        ('pending','Pending'),
        ('approved','Approved'),
        ('rejected','Rejected'),
    )
    employee=models.ForeignKey(Employee,on_delete=models.CASCADE)
    status=models.CharField(max_length=20,choices=STATUS_CHOICES)
    start_date=models.DateTimeField()
    end_date=models.DateTimeField()

    def __str__(self):
        return self.employee.user.username
    





ImproperlyConfigured at /api/employees/
Field name `first_name` is not valid for model `Employee` in `employees.serializers.EmployeeSerializer`.
Request Method:	GET
Request URL:	http://127.0.0.1:8000/api/employees/
Django Version:	5.2.3
Exception Type:	ImproperlyConfigured
Exception Value:	
Field name `first_name` is not valid for model `Employee` in `employees.serializers.EmployeeSerializer`.
Exception Location:	C:\Users\Sam\Desktop\Employee management system\venv\Lib\site-packages\rest_framework\serializers.py, line 1369, in build_unknown_field
Raised during:	employees.views.CreateEmployeeView
Python Executable:	C:\Users\Sam\Desktop\Employee management system\venv\Scripts\python.exe
Python Version:	3.12.4
Python Path:	
['C:\\Users\\Sam\\Desktop\\Employee management system',
 'C:\\Users\\Sam\\AppData\\Local\\Programs\\Python\\Python312\\python312.zip',
 'C:\\Users\\Sam\\AppData\\Local\\Programs\\Python\\Python312\\DLLs',
 'C:\\Users\\Sam\\AppData\\Local\\Programs\\Python\\Python312\\Lib',
 'C:\\Users\\Sam\\AppData\\Local\\Programs\\Python\\Python312',
 'C:\\Users\\Sam\\Desktop\\Employee management system\\venv',
 'C:\\Users\\Sam\\Desktop\\Employee management '
 'system\\venv\\Lib\\site-packages']

class CreateEmployeeView(viewsets.ModelViewSet):
    queryset=Employee.objects.all()
    serializer_class=EmployeeSerializer
  



